const xlsx = require("xlsx");
import { app, database, storage } from "@/firebaseConfig";
import { Button, ThemeProvider, createTheme } from "@mui/material";
import Autocomplete from "@mui/material/Autocomplete";
import TextField from "@mui/material/TextField";
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";
import { DatePicker } from "@mui/x-date-pickers/DatePicker";
import { LocalizationProvider } from "@mui/x-date-pickers/LocalizationProvider";
import { Inter } from "@next/font/google";
import { FaFileUpload } from "react-icons/fa";
import { MdSend } from "react-icons/md";

import { addDoc, collection } from "firebase/firestore";
import { getDownloadURL, ref, uploadBytes } from "firebase/storage";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Navbar2 from "../components/Navbar2";
import ParticleBackground from "../components/particleBackground";
const inter = Inter({ subsets: ["latin"] });


export default function SNScreen() {
  //theme for mui
  const theme = createTheme({
    palette: {
      mode: "dark",
      primary: {
        main: "#e6e6e6",
        contrastText: "#fff",
      },
    },
  });

  const router = useRouter();

  const [title, setTitle] = useState(""); // Add state for title
  const [body, setBody] = useState(""); // Add state for body

  const handleTitleChange = (event) => {
    setTitle(event.target.value);
  };
  const [dop, setDop] = useState("");
  const handleBodyChange = (event) => {
    const inputText = event.target.value;
    // Limit body text to a maximum of 100 words
    if (inputText.split(" ").length <= 100) {
      setBody(inputText);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const storageRef = ref(storage, `pdfs/${pdf.name}`);
      await uploadBytes(storageRef, pdf);

      const pdfUrl = await getDownloadURL(storageRef);

      const docRef = await addDoc(collection(database, "documents"), {
        title, 
        body, 
        dop,
        sem,
        pdfUrl,
      });

      console.log("Document written with ID: ", docRef.id);
    } catch (error) {
      console.error("Error adding document: ", error);
    }
  };
  return (
    <>
      <Head>
        <title>WellMindPro</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.png" />
      </Head>

      <Navbar2 />
      <main>
        <ParticleBackground />
        <div className="h-auto  flex flex-col justify-center items-center py-8 ">
          <div
            style={{ zIndex: "1" }}
            className="  px-12 py-10 w-11/12 sm:w-10/12 md:w-4/5 lg:w-4/5 xl:w-1/2 glass-morphic border-2 border-black rounded-md flex flex-col box-border"
          >
            <div className="text-5xl text-white text-center">Send Notification</div>


            <div className="flex flex-col  ">
              <ThemeProvider theme={theme}>
                <div className="flex flex-col mt-10 mb-10">

                  <TextField
                    label="Title"
                    variant="outlined"
                    value={title}
                    onChange={handleTitleChange}
                  />
                </div>

                <div className="flex flex-col mb-10 ">

                  <TextField
                    label="Body (Max 100 words)"
                    variant="outlined"
                    multiline
                    maxRows={4}
                    value={body}
                    onChange={handleBodyChange}

                  />
                </div>





                <div className="flex flex-row gap-6 flex-wrap justify-center">
                  <div className="flex flex-row items-center gap-2">
                    <LocalizationProvider dateAdapter={AdapterDayjs}>
                      <DatePicker
                        label="Select Date"
                        sx={{ minWidth: 320 }}
                        onChange={(event, selectedValue) => {
                          setDop(selectedValue);
                        }}
                        renderInput={(params) => (
                          <TextField {...params} label="Select a Date" />
                        )}
                      />
                    </LocalizationProvider>
                  </div>

                  <div className="flex flex-row items-center gap-2 mb-10">
                    <label htmlFor="filePicker" className="block font-medium mb-2">
                      <Button
                        component="span"
                        variant="outlined"
                        sx={{
                          p: "12px",
                          minWidth: 320,
                          textTransform: "capitalize",
                          color: "rgba(255, 255, 255, 0.7)",
                          fontWeight: "400",
                          fontSize: "1rem",
                        }}
                      >
                        Select Notes
                        <FaFileUpload
                          fontSize="1.45em"
                          style={{
                            marginLeft: "auto",
                            color: "rgba(255, 255, 255, 1)",
                          }}
                        />
                      </Button>
                    </label>
                    <input
                      type="file"
                      id="filePicker"
                      style={{ display: "none" }}
                      accept=".pdf"
                      className="py-2 px-4 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                  </div>
                </div>


                <Button
                  variant="outlined"
                  sx={{
                    fontSize: "1.2rem",
                    padding: "10px 0",
                    maxwidth: 240,
                  }}
                  endIcon={<MdSend />}
                  onClick={handleSubmit}
                >
                  Submit
                </Button>
              </ThemeProvider>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
